name: CI/CD 파이프라인

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 21 설정
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Gradle 빌드
        run: ./gradlew build

      - name: 테스트 실행
        run: ./gradlew test

      - name: 도커 설치
        uses: docker/setup-buildx-action@v2

      - name: 도커 허브 로그인
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 도커 이미지 빌드
        run: |
          docker build -t yeonnex/growth-batch:latest -f ./batch/Dockerfile ./batch

      - name: 도커 이미지 아키텍처 출력
        run: |
          docker inspect yeonnex/growth-batch:latest | grep "Architecture"

      - name: 도커 이미지 태그 및 푸시
        run: |
          docker tag yeonnex/growth-batch:latest yeonnex/growth-batch:latest
          docker push yeonnex/growth-batch:latest
      - name: AWS 인증
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: EC2에서 도커 컴포즈 다시 실행 (SSM)
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceIds,Values=${{ secrets.AWS_INSTANCE_ID }}" \
            --parameters 'commands=[
          "docker pull yeonnex/growth-batch:latest",  # Docker Hub에서 최신 이미지 다운로드
          "docker-compose -f /home/ec2-user/docker-compose.yml up -d"  # 도커 컴포즈 실행"
          ]'